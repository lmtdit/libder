// Generated by CoffeeScript 1.9.3
var _build, _cfg, _cfgData, _cfgFile, build, color, env, fs, gulp, gutil, helper, path, setting;

fs = require('fs');

path = require('path');

gulp = require('gulp');

gutil = require('gulp-util');

color = gutil.colors;

helper = function() {
  gutil.log(color.yellow.bold("==========================="));
  gutil.log(color.yellow.bold("    前端独立控件开发构建框架    "));
  gutil.log(color.yellow.bold(""));
  gutil.log(color.cyan("为丰富前端的组件库，让所有前端同学可以根据项目需要，"));
  gutil.log(color.cyan("增加新的组件或功能时，保障组件的质量以及使用文档的完整性，"));
  gutil.log(color.cyan("特增加此独立控件开发构建框架。"));
  return gutil.log(color.yellow.bold("==========================="));
};

gulp.task('helper', function() {
  return helper();
});

_cfgFile = path.join(process.env.INIT_CWD, 'config.json');

if (!fs.existsSync(_cfgFile)) {
  gutil.log(color.yellow("config.json is missing!"));
  _cfg = {};
  _cfgData = JSON.stringify(_cfg, null, 4);
  fs.writeFileSync(_cfgFile, _cfgData, 'utf8');
  gutil.log(color.yellow("config.json rebuild success!"));
  gutil.log(color.green("Run Gulp Task again! Plzzzzz..."));
  gulp.task('default', [], function() {
    return helper();
  });
  return false;
}

_build = require('./lib/build');

setting = _build.setting;

build = _build.build;

env = setting.env;


/*
 * ************* 构建任务函数 *************
 */

gulp.task('init', function() {
  return build.init();
});

gulp.task('cfg', function() {
  return build.cfg();
});

gulp.task('less', function() {
  return build.less2js();
});

gulp.task('tpl', function() {
  return build.tpl2js();
});

gulp.task('js', function() {
  return build.js2dist();
});

gulp.task('img', function() {
  return build.img2dist();
});

gulp.task('watch', function() {
  return build.watch();
});

gulp.task('server', function() {
  return build.server();
});

gulp.task('default', ['img', 'less', 'tpl', 'js', 'server'], function() {
  return gulp.start('watch');
});
